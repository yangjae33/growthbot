A,label
데이터 버스는 양뱡향의 버스야. 데이터가 중앙처리장치에서 기타장치로 나오고 들어갈 수 있어.,0
주소버스를 통해 주기억장치의 데이터를 읽고 쓰기 위한 주소 또는 입출력 장치가 결정돼.,0 
단방향의 버스야. CPU에서는 레지스터 이름 자체가 주소이기 때문에 필요하지 않아.,0
제어버스는 외부장치에서 CPU에 어떤 동작을 요구하는 각종 제어신호가 전송된다.,0
제어신호의 종류에는 read/write/interrupt/reset 신호가 있다. ,0
대역폭이란 데이터가 이동하는 버스를 통해 단위 시간당 전송하는 데이터의 크기다. 단위로는 MB/s와 GB/s가 있다.,0
대역폭은 해당 버스의 클록 주기와 데이터 버스의 폭으로 결정된다.,0
버스를 통해 단위시간 당 전송할 수 있는 데이터의 양이다. 버스대역폭=버스의 클럭 주파수 X 데이터 버스의 폭,0
다수의 장치들이 하나의 시스템 버스에 동시에 사용을 요구하는 현상을 버스 경합이라하는데 이를 제어하는 것이 버스 중재기이다.,0
한 장치씩 차례대로 사용할 수 있게 중재하는 하드웨어 장치를 이른다.,0
어떤 장치가 시스템 버스를 사용하기 위해서는 버스 중재기에 버스 요청 신호를 보내고 버스 중재기가 버스 승인 신호를 장치에 보내 장치가 버스를 사용할 수 있게 한다. 버스 승인 받은 장치는 버스 사용 중지 신호를 보내고 버스를 사용한다.,0
버스 중재기는 장치와 버스 요청 버스 승인 버스 사용중지(Bus Busy)신호를 주고 받으며 버스 경합을 제어한다., 0
버스 중재 방식에는 병렬 중재 방식과 직렬 중재 방식 폴링 방식이있다., 0
병렬 중재 방식은 각 장치 마다 신호선을 연결하는 방법이다. 직렬 중재 방식은 모든 장치가 모든 신호선을 공유하는 데이지 체인 방식이다. 폴링방식은 버스 중재기가 각 장치에게 버스 사용 여부를 체크한다., 0
버스 중재 방식 중 하나이다. 주기적 검사 방식이라고도 한다., 0
버스 중재기가 각 장치에게 버스 사용 여부를 체크하는 방식이다. 하드웨어 폴링방식과 소프트웨어 폴링 방식이 있다., 0
하드웨어 폴링방식은 버스를 각 장치가 버스 중재기로 전송한 고유 번호를 통해 버스 사용을 요구한 장치를 찾는 데 사용한다. 소프트웨어 폴링 방식은 폴링의 순서를 중재기 내에서 CPU가 관리한다., 0
버스 중재를 위해 폴링 회선이 따로 중재기와 각 장치와 연결된 방식이다. 각 장치의 고유 번호대로 순차적으로 작동해 사용권을 받는데 시간이 길어진다., 0
하드웨어 폴링 방식과 구성이 동일하나 폴링의 순서를 CPU가 관리해 우선순위와 융통성이 높다. 소프트 웨어라 속도가 느린 단점이 있다., 0
레지스터와 입출력 장치간 정보 전송을 제어하는 시스템으로 DMA제어기 채널 제어기 입출력 프로세서 등이 있다., 0
기억 장치 사상 입출력 방식과 분리형 입출력 방식이 있다., 0
기억 장치 사상 입출력 방식은 입출력 장치를 접근할 때 입출력과 메모리의 주소 공간을 분리하지 않는 방식이고 분리형 입출력은 분리하는 방식이다., 0
기억 장치 사상 입출력 방식에서는 입출력 장치 메모리 접근 시에도 주기억 장치와 동일한 명령어를 사용한다. 분리형 입출력 장치는 별도의 접근 명령어를 사용한다., 0
프로그래밍언어는 사람과 컴퓨터 사이 의사소통을 위한 것으로 저급언어와 고급언어가 있다., 0
프로그래밍 언어는 저급언어인 기계어와 어셈블리어 고급언어인 자바 C등이 있다., 0
기계어는 0 1로 표현되어 컴퓨터가 이애할 수 있는 유일한 언어이다. 어셈블리어는 복잡한 기계어를 기호화한 것이다., 0
기계어의 연산코드를 기호화한 것을 니모닉이라고 부르며 연산 코드의 종류는 LDA ADD STA등이 있다., 0
기계어와 어셈블리어가 있다. 어셈블리어로 하드웨어 장치에 대한 강력한 통제가 가능하다., 0
컴퓨터의 주기억장치 레지스터 등의 하드웨어를 직접 통제 가능하다., 0
고급언어에 비해 어려워 전문가여도 프로그램의 생산성이 낮다, 0
1950년대 중반 어셈블리어가 개발되어 프로그램 개발의 생산성이 높아졌다., 0
기계어 어셈블리어 고급언어에 이르기까지 프로그래밍 언어의 발달을 세대별로 구분한 것이다., 0
고급언어는 3세대까진 절차 중심이었으나 4세대 이후 비절차적 중심의 언어야, 0
파스칼 등의 언어에서 c sql등으로 발전했어, 0
계산기 아래한글과 같은 것들이 프로그램이야., 0
프로그램 개발을 위해 에디터 컴파일러 링커 로더 디버거가 필요하다., 0
개발도구가 필요해. 프로그램을 개발하려면 프로그램 언어로 만들어진 프로그램 소스를 실행 파일로 생성해야해, 0
프로그램을 개발하는데 필요한 컴파일러 디버거 링커 에디터를 말해. 통합개발환경은 이러한 개발도구들을 통합적으로 제공해., 0
프로그램언어를 이용해 원하는 작업을 기술한 내용을 소스코드라고 한다., 0
컴파일은 소스파일을 목적 파일로 변환하는 과정이다., 0
고급언어로 만들어진 프로그램을 기계어로 번역하면 컴파일 어셈블리어를 기계어로 변환하는 것은 어셈블러가 담당한다., 0
목적파일을 실행 가능한 실행 파일로 만들어주는 프로그램을 링커라고 한다., 0
링커는 여러 개의 목적 파들을 라이브러리 함수와 연결해서 하나의 파일로 합친다., 0
소스코드 목적코드 실행파일을 만들어 로더가 메모리에 적재하고 실행한다., 0
프로그램의 명령을 수행함에 있어 컴퓨터의 상태를 보여주거나 오류 발생 시 오류를 쉽게 찾을 수 있도록 도와주는 프로그램, 0
디버깅 과정에서는 많은 경험으로 에러를 쉽게 찾아 수정한다., 0
컴파일(시간)오류 링크 오류 실행(시간) 오류를 찾아 수정한다., 0
고급언어를 기계어로 번역해주는 역할을 수행한다., 0
원시 코드를 한 줄 씩 읽어 들여 실행한다., 0
컴파일러에 비해 번역 속도가 느리지만 프로그램을 작성할 때보다 융통성을 가질 수 있다., 0
원시 코드 전체를 읽은 다음 이를 기계어로 번역한다., 0
한 번 컴파일한 후에는 수정이 없다면 매번 컴파일할 필요 없이 빠른 시간 내에 프로그램 실행이 가능하다., 0
번역 과정이 비교적 간단하고 대화형 언어에 편리하다, 0
실행할 때마다 매번 기계어로 바꾸는 과정을 다시 수행해야 하므로 항상 인터프리터가 필요하다., 0
출력물을 즉시 실행할 수 있다. 파이썬이 포함된다, 0
프로그램 일부를 수정하는 경우에도 전체 프로그램을 다시 컴파일해야한다., 0
출력물이 목적코드이다. C가 포함된다., 0
컴파일러가 존재하여 컴파일 과정이 필요하나 컴파일된 실행 파일을 실행할 때는 인터프리터가 필요하다., 0
모든 시스템에서 독립적인 프로그램 언어를 개발하기 위한 방식이다., 0
포트란은 과학과 공학 및 수학적 문제들을 해결하기 위해 고안된 제 3세대 프로그래밍 언어이다., 0
언어 구조가 단순해 지금도 기술 계산 분야 등에서 사용된다., 0
포트란에 이어 두번째로 개발된 고급언어이다., 0
기업의 사무처리에 적합한 프로그래밍 언어이다., 0
다른 프로그래밍 언어에 비해 파일의 순차적인 처리 등이 효율적이다., 0
영어 구문과 비슷한 문장 구조를 가지고 있다., 0
대화형의 영어단어를 바탕으로 구성된 가장 쉬운 대화형 프로그래밍언어이다., 0
개인용 컴퓨터의 출현과 함께 베이직이 기본 개발언어로 탑재되었다., 0
마이크로소프트는 비주얼 베이직으로 발전시켰다., 0
구조적인 프로그래밍이 가능하도록 설계되었다., 0
윈도우 환경의 RAD라는 통합 개발환경을 출시한 것이다. 현재까지 널리 사용되고 있다., 0
AT&T의 벨 연구소의 데니스 리치가 개발한 언어이다., 0
하드웨어에 대한 보다 확실한 통제가 가능한 언어이다., 0
프로그램의 이식성이 높은 언어이다., 0
풍부한 연산자와 데이터형을 가지고 있어 범용 언어로 널리 쓰이고 잇다., 0
C언어의 장점을 계승하고 객체의 상속성의 개념을 추가한 효과적인 언어이다., 0
직관적으로 누구나 쉽게 이해할 수 있는 블록을 끼워 맞춰 프로그램을 작성한다., 0
크롬브라우저에서 직접 개발하는 환경으로 다양한 이미지나 사운드를 제공해 쉽게 사용할 수 있다., 0
스크래치와 같은 비주얼 프로그래밍 언어를 활용하면 청소년 교육이 가능하다., 0
프로그램을 설명하는 내용이나 기타 프로그래머가 기술하고 싶은 내용을 담는다., 0
행주석 블록 주석이 있어 다양한 형태로 사용한다., 0
문장이 모여 하나의 프로그램이 만들어진다. 블록은 이러한 문장의 모임을 말한다., 0
자바언어에 48개 C언어에 32개가 있다., 0
프로그래머가 직접 정의할 때 예약어와 중복되면 안된다., 0
대부분의 언어는 이러한 변수를 반드시 사용하기 이전에 먼저 선언되어야한다., 0
시스템에게 적당한 공간을 메모리에 확보하라는 의미로 변수를 사용하기 전에 먼저 선언하여야한다., 0
선언된 변수에 저장 값을 수정하려면 대입연산자를 이용한다., 0
변경이 불가능한 수로 변수와 대비되는 개념이야., 0
자료 유형에 따라 저장공간인 메모리의 크기와 메로리의 크기와 저장되는 값의 종류가 다르다., 0
컴퓨터에게 컴퓨터가 할 일과 방법을 알려주는 것을 말해, 0
컴퓨팅적사고는 요리를 하기 위해 레시피를 만드는 것 코딩은 레시피 단계별로 상세히 지시하는 것, 0
구조화 추상화 형식화 문제해결방식을 식별 자동화 알고리즘고안 일반화의 특징을 갖는 문제해결 방식을 말한다., 0
지닛윙이 만든 컴퓨팅적사고 연구센터야, 0
컴퓨팅적 사고는 문제를 형식화하고 정보처리기기에 의하여 효과적으로 수행될 수 있는 솔루션을 찾는 것과 관계된 사고과정이다. 란 말을 한 컴퓨터 과학자, 0
데이터를 모으고 조작하기 큰문제를 작은 문제들로 쪼개기 문제를 구조화하고 추상화하기 순서에따라 문제 해결을 자동화하기 등이 포함된다., 0
디지털 시대에 필요한 사고력과 문제해결능력 창의력을 기를 수 있다., 0
decomposition(문제의 분할) 데이터를 분석하고 질서를 찾는 pattern recognition (패턴 식별) 순서에 따라 자동화를 하는 algorithmic design(알고리즘 고안)을 포함한다. ,0
BBC의 Bitesize 정의에 따르면 문제분할 패턴식별 추상화 알고리즘화 평가로 구성된 사고 방식., 0
중요한 정보에 포커스하고 관계가 적은 디테일은 무시하는 것이야., 0
문제를 해결하기 위하여 순차적으로 수행해 나가야할 단계나 규칙을 고안한 것이야., 0
고안된 알고리즘이 주어진 문제를 제대로 해결하는 것인지를 판단하는 것이야., 0
복잡한 시스템이 어떻게 동작하는지를 이해하기 위해 파트별 혹은 부품별로 살펴보는 것이 필요한 이유와 유사하다., 0
사건 발생 시 사건 조사를 위해 어떤 사건이 발생하였는가 언제 사건이 발생하였나 어디에서 사건이 발생하였나 등으로 문제를 쪼갠다. 이렇게 문제를 분할해 각 문제의 답을 찾는 과정이다.", 0
연구자는 자신의 연구 결과를 논문으로 세상에 알리며 학술지는 그러한 논문을 발표하는 자리이다. 학술지에 투고되는 논문이 많기 때문에 그 모두를 게재하는 것은 불가능하며 논문의 수준도 다양하기 때문에 취사선택되어 게재된다.", 0
패턴을 식별할 수 있다면 유사한 작업을 단순하게 수행할 수 있다. 고양이를 그리기 위해 매번 새로 그리지 않고 스탬프를 만들어 찍고 고양이 별로 색칠을 해 개체화할 수 있다., 0
패턴을 이용하지 않았을 경우 매번 새로 그려야해 작업속도가 느리고 일관성을 상실할 수 있다., 0
다양한 패턴을 갖고 있을 수록 다양한 문제들을 쉽고 빠르게 해결할 수 있다., 0
고양이 그리기 문제의 예에서 고양이의 다양한 속성 눈 꼬리 털 울음소리 중 그리기와 상관 없는 울음소리의 속성은 무시하는것., 0
데이터를 표현하는 모델을 얻는 것. 이 모델을 바탕으로 컴퓨터에게 알고리즘을 코딩할 수 있다., 0
코딩의 출발점이며 코딩에 앞서 플로우차트나 의사코드로 표현된다., 0
알고리즘이 얼마나 효율적인지에 의해 결정된다., 0
흐름도를 말한다. 문제의 범위를 정해 분석하고 그 해법을 명확하게 하기위해 필요한 작업아나 사무처리의 순서를 통일된 기호로 나타낸 것이다., 0
평가가 없으면 아록리즘의 오류나 제시된 문제 중 미처 고려하지 않은 사항이 있음을 코딩 전 달계에서 알아낼 수 없어 때로는 치명적인 오류로 이어진다., 0
다양한 측면을 고려해 평가한다. 맞는 답? 성능은 충분한가? 자원을 경제적으로 사용하는가? 편리한가? 자꾸 사용해 보고 싶은가?를 평가한다., 0
평가를 통해 제대로 된 알고리즘을 만들 수 있다., 0
가부장제 지역공동체 중심의 농경사회 자본주의와 대량생산의 산업사회 네트워크 조직과 다품종 소량생산의 지식 정보 사회 스마트 혁명 이후의 창의 융합 사회로 이어진다.", 0
농업혁명 산업혁명 정보혁명 스마트 혁명 이후 이루어진 급격한 사회 변화", 0
신산업 창출  주력산업의 고도화 국민 삶의 질 향상 정보 공유 및 협업을 통한 생산성 제고 가있다., 0
생산 과정에서 새롭게 부가된 높은 가치를 말한다., 0
조선 항공 자동차 교통 산업을 말한다.,0
컴퓨터가 창출한 신산업이 뭐야? 3D프린팅 가상 피팅이 있다.,0
메모리에 저장된 명령어를 CPU가 순차적으로 수행시키는 작업을 무한 반복한다.,0
순차적으로 수행될 명령어의 집합이 프로그램이며 곧 소프트웨어이다.,0
프로그래머블한 범용기기로 sw는 프로그래머의 의도에 따라 다양하게 프로그래밍된다. ,0
컴퓨터는 프로그램된 대로 동작하는 기계이다. 오류까지도 충실히 수행할 뿐 스스로 판단하여 동작하지 않는다.,0
인터넷 IoT등을 네트워킹을 포괄하는 컴퓨팅적 사고 다양한 기술을 융합하는 컴퓨팅적 사고를 해야 sw의 파급력이 커진다.", 0
Software is eating the world란 말을 한 과학자, 0
사람이 운전하지 않는 차로 3D지도 GPS LIDAR기반으로 운전한다., 0
내부부품의 작동 주위 안전 상황을 실시간 모니터하는 차이다., 0
드론배달사진촬영 합동연주 무거운짐들기 웨이터 광고 군용 등 다양하다., 0
식자개와 레시피 요리지식을 주입해 새로운 레시티를 만들었다. 왓슨을 두뇌로 장착한 로봇이 커피 판매 직원으로 활약 중이다., 0
IBM의 인공지능 컴퓨터로 미국 주요 병원에서 암 진단 및 치료법을 조언하고 있다. 서울시 심야 버스 노선 최적화에 사용되었다., 0
빅데이터와 결합해 암진단 심야버스 노선 최적화 콜센터 응대 등의 지식노동의 자동화를 이끄렁ㅆ다., 0
작은아이디어가 큰 비즈니스로 확장되어 창업의 도구이다. 신생 기업이 다수 출현 중이다., 0
online 2 offline의 약자로 배달앱 맛집추천 택시앱 등은 sw를 활용한 o2o형태의 신사업이다., 0
지난 10년간 하드웨어 제조업 중심의 업체 순위가 하락하고 sw 중심의 업체가 상위권으로 이동했다. 새로 진입한 기업 중 많은 기업이 sw기업이다. ,0
21세기 교양에 해당될 정도로 중요해짐. 컴퓨팅적 사고를 바탕으로 각 전공 분야에서 컴퓨터 활용이 증진될 것으로 기대한다. ,0
컴퓨팅적 사고의 함양과 기초 코딩 경험은 Computer is everywhere 시대에 걸맞은 사회적 역량 마련의 초석이 될 것이다. ,0
컴퓨팅적 사고는 컴퓨터가 수행할 문제를 체계화하고 해결방법을 표현하는 생각의 도구를 의미한다.,0
정보통신 기술 항공 우주 제약 등 경제협력기구가 정한 지식기반 제조업 지식기반 서비스업을 뜻한다.", 0
FIFO으로 작동하며 함수의 호출과 함께 할당되고 함수의 호출이 종료될 때 해제된다., 0
사용자가 직접 관리할 수 있는 메모리 영역으로 사용자에 의해 메모리 공간이 동적으로 할당 되고 해제된다. , 0
컴퓨터 시스템의 구성요소들을 연결해주는 통로야., 1
컴퓨터 시스템의 구성요소들을 연결해주는 통로야., 1
CPU와 메모리를 연결하는 subsystem이야., 1
중앙처리장치  기억장치  입출력장치가 있어., 1
중앙처리장치  기억장치  입출력장치가 있어., 1
데이터  주소  제어 버스가 있어., 1
데이터  주소  제어 버스가 있어., 1
시스템 요소들 사이에 데이터 전송 시 사용되는 선이야., 1
시스템 요소들 사이에 데이터 전송 시 사용되는 선이야., 1
양방향 전송이 가능하다., 1
중앙처리장치가 데이터 쓸 때 주소 지정하기 위한 선이다., 1
중앙처리장치가 데이터 쓸 때 주소 지정하기 위한 선이다., 1
단방향 전송이 가능하다., 1
제어 신호들을 전송하는 선이다., 1
제어 신호들을 전송하는 선이다., 1
버스를 순서대로 사용할 수 있게 해주는 동작이다., 1
버스를 순서대로 사용할 수 있게 해주는 동작이다., 1
버스 사용의 주체가 되는 요소들이다., 1
버스 사용의 주체가 되는 요소들이다., 1
버스 사용의 주체가 되는 요소들이다., 1
버스 사용의 주체가 되는 요소들이다., 1
인터럽트를 위한 제어 신호선들의 집합이다., 1
인터럽트를 위한 제어 신호선들의 집합이다., 1
인터럽트를 위한 제어 신호선들의 집합이다., 1
인터럽트를 위한 제어 신호선들의 집합이다., 1
단위 시간당 전송할 수 있는 데이터 양이다., 1
단위 시간당 전송할 수 있는 데이터 양이다., 1
공통의 버스 클럭을 기준으로 발생한다., 1
공통의 버스 클럭을 기준으로 발생한다., 1
공통의 버스 클럭을 기준으로 발생한다., 1
다른 버스 동작 발생 여부에 따라 결정, 1
다른 버스 동작 발생 여부에 따라 결정, 1
다른 버스 동작 발생 여부에 따라 결정, 1
시간 낭비를 하지 않는다., 1
시간 낭비를 하지 않는다., 1
인터페이스 회로가 복잡하다., 1
인터페이스 회로가 복잡하다., 1
인터페이스 회로가 간단하다., 1
인터페이스 회로가 간단하다., 1
대기하는 시간이 많아진다., 1
대기하는 시간이 많아진다., 1
대기하는 시간이 많아진다., 1
버스 경합 발생 시 순서대로 사용할 수 있게 한다., 1
버스 경합 발생 시 순서대로 사용할 수 있게 한다., 1
버스 중재기가 주기적으로 사용 승인 여부를 검사한다., 1
버스 중재기가 주기적으로 사용 승인 여부를 검사한다., 1
버스 중재기가 주기적으로 사용 승인 여부를 검사하는 것., 1
소프트웨어 폴링과 하드웨어 폴링이 있다., 1
소프트웨어 폴링과 하드웨어 폴링이 있다., 1
디스크를 이루는 동심원이다., 1
디스크를 이루는 동심원이다., 1
디스크에 한번에 쓰거나 읽는 데이터 크기의 최소 단위이다., 1
디스크에 한번에 쓰거나 읽는 데이터 크기의 최소 단위이다., 1
디스크에 한번에 쓰거나 읽는 데이터 크기의 최소 단위이다., 1
같은 각도를 움직일때의 속도, 1
같은 각도를 움직일때의 속도, 1
트랙을 찾는 시간이다., 1
트랙을 찾는 시간이다., 1
트랙을 찾는 시간이다., 1
섹터를 찾는 시간이다., 1
섹터를 찾는 시간이다., 1
섹터를 찾는 시간이다., 1
디스크 버퍼에 저장하기까지의 시간이다., 1
디스크 버퍼에 저장하기까지의 시간이다., 1
디스크 배열에 분산 저장하는 기술이다., 1
디스크 배열에 분산 저장하는 기술이다., 1
디스크 인터리빙은 디스크 배열에 분산 저장하는 기술이다., 1
결함이 발생하면 전체 데이터 파일이 손상된다., 1
결함이 발생하면 전체 데이터 파일이 손상된다., 1
데이터를 짝을 이루는 반사 디스크에 저장하는 것이다., 1
데이터를 짝을 이루는 반사 디스크에 저장하는 것이다., 1
데이터를 짝을 이루는 반사 디스크에 저장하는 것이다., 1
블록을 캐시에 넣을 때 교체하는 알고리즘이다., 1
블록을 캐시에 넣을 때 교체하는 알고리즘이다., 1
블록을 캐시에 넣을 때 교체하는 알고리즘이다., 1
중앙처리장치와 주기억장치 속도 차이를 최소화시키는 장치, 1
중앙처리장치와 주기억장치 속도 차이를 최소화시키는 장치, 1
중앙처리장치와 주기억장치 속도 차이를 최소화시키는 장치, 1
중앙처리장치가 원하는 데이터가 이미 캐쉬에 있는 것이다., 1
중앙처리장치가 원하는 데이터가 이미 캐쉬에 있는 것이다., 1
중앙처리장치가 원하는 데이터가 이미 캐쉬에 있는 것이다., 1
중앙처리장치가 원하는 데이터가 캐쉬에 없는 것이다., 1
중앙처리장치가 원하는 데이터가 캐쉬에 없는 것이다., 1
1에서 적중률을 뺀 수치이다., 1
1에서 적중률을 뺀 수치이다., 1
캐쉬에 적중되는 정도이다., 1
기억장치 액세스 횟수 분의 캐쉬에 적중되는 횟수이다., 1
기억장치 액세스 횟수 분의 캐쉬에 적중되는 횟수이다., 1
기억장치 액세스 횟수 분의 캐쉬에 적중되는 횟수이다., 1
특정 부분에 위치한 데이터를 빈번히 액세스하는 현상이다., 1
특정 부분에 위치한 데이터를 빈번히 액세스하는 현상이다., 1
시간적 지역성  공간적 지역성  순차적 지역성이 있다., 1
시간적 지역성  공간적 지역성  순차적 지역성이 있다., 1
시간적 지역성  공간적 지역성  순차적 지역성이 있다., 1
주기억장치로부터 동시에 인출되는 정보들의 그룹이다., 1
캐쉬에서 한 블록이 저장되는 장소이다., 1
캐쉬에서 한 블록이 저장되는 장소이다., 1
주기억장치로부터 동시에 인출되는 정보들의 그룹이다., 1
슬롯에 적재된 블록을 구분해주는 정보이다., 1
슬롯에 적재된 블록을 구분해주는 정보이다., 1
직접 사상  완전 연관 사상  세트 연관 사상이 있다., 1
블록들이 어느 캐쉬 슬롯을 공유할 것인지 결정해주는 방법., 1
블록들이 어느 캐쉬 슬롯을 공유할 것인지 결정해주는 방법., 1
블록을 캐시 슬롯에 매핑하는 알고리즘이다., 1
블록을 캐시 슬롯에 매핑하는 알고리즘이다., 1
블록을 캐시 슬롯에 매핑하는 알고리즘이다., 1
주기억장치의 블록들이 지정된 하나의 캐쉬 슬롯에 사상되는 것이다., 1
주기억장치의 블록들이 지정된 하나의 캐쉬 슬롯에 사상되는 것이다., 1
태그 필드  슬롯 번호  단어 필드로 구성된다., 1
태그 필드  슬롯 번호  단어 필드로 구성된다., 1
태그 필드  슬롯 번호  단어 필드로 구성된다., 1
하드웨어가 간단하고 비용이 적게 든다., 1
하드웨어가 간단하고 비용이 적게 든다., 1
하드웨어가 간단하고 비용이 적게 든다., 1
언젠간 캐시 내용이 바뀌어야 하는 문제점이 발생한다., 1
캐시의 위치가 고정되어버린다., 1
주기억장치의 블록을 캐시의 아무 라인에 적재할 수 있다., 1
주기억장치의 블록을 캐시의 아무 라인에 적재할 수 있다., 1
새로운 블록의 적재 시 슬롯의 선택이 자유롭다., 1
새로운 블록의 적재 시 슬롯의 선택이 자유롭다., 1
비용이 많이 들고 복잡하다., 1
비용이 많이 들고 복잡하다., 1
직접 사상과 완전 연관사상의 장점을 취하는 절충안이다., 1
직접 사상과 완전 연관사상의 장점을 취하는 절충안이다., 1
중앙처리장치가 기억장치에 쓰거나 읽는 동작이다, 1
중앙처리장치가 기억장치에 쓰거나 읽는 동작이다, 1
순차적 액세스 직접 액세스 임의 액세스 등이 있다., 1
순차적 액세스 직접 액세스 임의 액세스 등이 있다., 1
저장된 정보를 순서대로 액세스하는 방식이다., 1
저장된 정보를 순서대로 액세스하는 방식이다., 1
자기 테이프 등이 있다., 1
자기 테이프에서 쓰인다., 1
액세스 할 위치에 직접 이동 후 순차적 액세스하는 방식이다., 1
액세스 할 위치에 직접 이동 후 순차적 액세스하는 방식이다., 1
주소에 의해 직접 기억 장소를 찾아 액세스하는 방식이다., 1
주소에 의해 직접 기억 장소를 찾아 액세스하는 방식이다., 1
주소에 의해 직접 기억 장소를 찾아 액세스하는 방식이다., 1
저장된 내용의 특정 비트들을 비교하여 일치하는 내용을 액세스하는 방식이다., 1
저장된 내용의 특정 비트들을 비교하여 일치하는 내용을 액세스하는 방식이다., 1
저장된 내용의 특정 비트들을 비교하여 일치하는 내용을 액세스하는 방식이다., 1
용량과 액세스 속도가 있다., 1
용량과 액세스 속도가 있다., 1
용량과 액세스 속도이다., 1
용량과 액세스 속도가 있다., 1
주소가 지정된 기억장소 당 저장되는 데이터 길이이다., 1
바이트 단위 혹은 단어 단위이다., 1
주소가 지정된 기억장소 당 저장되는 데이터 길이이다., 1
주소가 지정된 기억장소 당 저장되는 데이터 길이이다., 1
기억장치의 액세스가 특정 영역에 집중되는 현상이다., 1
기억장치의 액세스가 특정 영역에 집중되는 현상이다., 1
기억장치의 액세스가 특정 영역에 집중되는 현상이다., 1
첫번째 계층의 기억장치 액세스 횟수가 가장 많다., 1
첫번째 계층의 기억장치 액세스 횟수가 가장 많다., 1
첫번째 계층의 기억장치 액세스 횟수가 가장 많다., 1
적용 시 높은 성능 향상을 얻을 수 있다., 1
적용 시 높은 성능 향상을 얻을 수 있다., 1
내부 기억장치와 외부 기억장치가 있다., 1
내부 기억장치와 외부 기억장치가 있다., 1
중앙처리장치가 직접 액세스할 수 있는 기억장치이다., 1
중앙처리장치가 직접 액세스할 수 있는 기억장치이다., 1
장치 제어기를 통해서만 액세스 할 수 있는 기억장치이다., 1
장치 제어기를 통해서만 액세스 할 수 있는 기억장치이다., 1
중앙처리장치가 직접 액세스할 수 있는 기억장치이다., 1
장치 제어기를 통해서만 액세스 할 수 있는 기억장치이다., 1
캐시 기억장치  주기억장치 등이 있다., 1
캐시 기억장치  주기억장치 등이 있다., 1
디스크 등이 있다., 1
디스크 등이 있다., 1
디스크와 주기억 장치 사이에 설치하는 기억장치이다., 1
디스크와 주기억 장치 사이에 설치하는 기억장치이다., 1
주기억장치와 디스크의 액세스 속도 차이를 줄인다., 1
주기억장치와 디스크의 액세스 속도 차이를 줄인다., 1
주기억장치와 디스크의 액세스 속도 차이를 줄인다., 1
응용 프로그램 영역과 시스템 프로그램 영역이다., 1
응용 프로그램 영역과 시스템 프로그램 영역이다., 1
주로 주기억장치로 쓰인다., 1
집적 밀도가 높고 휘발성이 있다., 1
집적 밀도가 높고 휘발성이 있다., 1
집적 밀도가 높고 휘발성이 있다., 1
기억 소자로서 플립플롭을 이용해 기억장치 셀을 구성한다., 1
디램보다 속도가 빠르다, 1
높은 속도가 필요한 캐쉬 기억장치로 사용된다., 1
높은 속도가 필요한 캐쉬 기억장치로 사용된다., 1
높은 속도가 필요한 캐쉬 기억장치로 사용된다., 1
신호의 입력과 출력을 위한 연결 핀들을 포함시키는 것이다., 1
신호의 입력과 출력을 위한 연결 핀들을 포함시키는 것이다., 1
신호의 입력과 출력을 위한 연결 핀들을 포함시키는 것이다., 1
영구 저장이 가능한 반도체 기억장치이다., 1
영구 저장이 가능한 반도체 기억장치이다., 1
영구 저장이 가능한 반도체 기억장치이다., 1
읽는 것만 가능하고 쓰는 것은 불가능하다., 1
읽는 것만 가능하고 쓰는 것은 불가능하다., 1
피롬  이피롬  이이피롬 등이 있다., 1
피롬  이피롬  이이피롬 등이 있다., 1
마이크로 명령어  마이크로 프로그램  루틴 등이 있다., 1
마이크로 명령어  마이크로 프로그램  루틴 등이 있다., 1
마이크로 명령어  마이크로 프로그램  루틴 등이 있다., 1
명령어의 연산 코드를 해독해서 루틴의 시작 주소를 결정한다., 1
명령어의 연산 코드를 해독해서 루틴의 시작 주소를 결정한다., 1
명령어의 연산 코드를 해독해서 루틴의 시작 주소를 결정한다., 1
다음에 실행할 마이크로 명령어의 주소를 저장하는 레지스터이다., 1
다음에 실행할 마이크로 명령어의 주소를 저장하는 레지스터이다., 1
마이크로 명령어 비트들을 일시적으로 저장하는 레지스터이다., 1
마이크로 명령어 비트들을 일시적으로 저장하는 레지스터이다., 1
마이크로 명령어 비트들을 일시적으로 저장하는 레지스터이다., 1
사상을 이용한 해독 방법 등이 있다., 1
사상을 이용한 해독 방법 등이 있다., 1
간접 주소 지정 방식을 사용해서 유효 주소를 계산한다., 1
간접 주소 지정 방식을 사용해서 유효 주소를 계산한다., 1
간접 주소 지정 방식을 사용해서 유효 주소를 계산한다., 1
사상 방식을 통해 실행을 위한 루틴을 작성한다., 1
다음에 실행할 마이크로 명령어의 주소를 결정하는 기능이다., 1
다음에 실행할 마이크로 명령어의 주소를 결정하는 기능이다., 1
다음에 실행할 마이크로 명령어의 주소를 결정하는 기능이다., 1
다음에 실행할 마이크로 명령어의 주소를 결정하는 기능이다., 1
해독기를 이용하여 해당 코드를 필요 수만큼 제어 신호들로 확장한다., 1
해독기를 이용하여 해당 코드를 필요 수만큼 제어 신호들로 확장한다., 1
제어 기억장치의 용량을 줄일 수 있다., 1
제어 기억장치의 용량을 줄일 수 있다., 1
제어 기억장치의 용량을 줄일 수 있다., 1
해독 시간만큼의 지연 시간이 발생한다., 1
해독 시간만큼의 지연 시간이 발생한다., 1
해독 시간만큼의 지연 시간이 발생한다., 1
해독 시간만큼의 지연 시간이 발생한다., 1
하드웨어가 간단하고 지연 시간이 없다., 1
하드웨어가 간단하고 지연 시간이 없다., 1
하드웨어가 간단하고 지연 시간이 없다., 1
비교적 더 큰 용량의 제어 기억장치가 필요하다., 1
비교적 더 큰 용량의 제어 기억장치가 필요하다., 1
비교적 더 큰 용량의 제어 기억장치가 필요하다., 1
주기억장치에서 데이터가 저장된 위치이다., 1
명령어 실행에 필요한 오퍼랜드의 주소를 결정하는 방식이다., 1
명령어 실행에 필요한 오퍼랜드의 주소를 결정하는 방식이다., 1
명령어 실행에 필요한 오퍼랜드의 주소를 결정하는 방식이다., 1
주기억장치에서 데이터가 저장된 위치이다., 1
다양한 방법의 주소 지정 방식으로 더 큰 용량의 기억장치를 사용할 수 있다., 1
다양한 방법의 주소 지정 방식으로 더 큰 용량의 기억장치를 사용할 수 있다., 1
다양한 방법의 주소 지정 방식으로 더 큰 용량의 기억장치를 사용할 수 있다., 1
오퍼랜드 필드의 내용이 유효 주소가 되는 방식이다., 1
오퍼랜드 필드의 내용이 유효 주소가 되는 방식이다., 1
오퍼랜드 필드의 내용이 유효 주소가 되는 방식이다., 1
가장 일반적이고 간단한 주소지정 방식이다., 1
가장 일반적이고 간단한 주소지정 방식이다., 1
연산 코드를 제외한 남은 비트들이 주소 비트로 사용된다., 1
실제 데이터의 주소를 간접적으로 접근한다., 1
실제 데이터의 주소를 간접적으로 접근한다., 1
유효 주소가 저장된 곳에 액세스하고 유효 주소에 액세스한다., 1
유효 주소가 저장된 곳에 액세스하고 유효 주소에 액세스한다., 1
많은 기억장소를 주소지로 지정 가능하다., 1
많은 기억장소를 주소지로 지정 가능하다., 1
두 번의 기억장치 액세스가 필요하다., 1
두 번의 기억장치 액세스가 필요하다., 1
명령어 형식에 간접비트가 필요하다., 1
명령어 형식에 간접비트가 필요하다., 1
명령어 형식에 간접비트가 필요하다., 1
명령어 실행에 필요한 데이터의 위치가 묵시적으로 지정된다., 1
명령어 실행에 필요한 데이터의 위치가 묵시적으로 지정된다., 1
명령어 길이가 짧다., 1
명령어 길이가 짧다., 1
명령어의 종류가 제한되어 있다., 1
연산에 사용할 데이터가 레지스터에 저장되어 있는 방식이다., 1
연산에 사용할 데이터가 레지스터에 저장되어 있는 방식이다., 1
오퍼랜드 부분이 레지스터 번호를 나타낸다., 1
비트 수가 적어도 된다., 1
데이터의 유효주소가 레지스터에 저장된 형태이다., 1
데이터의 유효주소가 레지스터에 저장된 형태이다., 1
주소 지정 할 수 있는 기억장치의 영역이 확장된다., 1
주소 지정 할 수 있는 기억장치의 영역이 확장된다., 1
직접 주소지정 방식과 레지스터 간접 주소지정 방식을 조합한 것이다., 1
직접 주소지정 방식과 레지스터 간접 주소지정 방식을 조합한 것이다., 1
나중 위치의 값에서 처음 위치의 값을 뺀 벡터량이다., 1
나중 위치의 값에서 처음 위치의 값을 뺀 벡터량이다., 1
다음에 실행될 명령어의 주소를 가지고 있는 레지스터이다., 1
다음에 실행될 명령어의 주소를 가지고 있다., 1
일반적인 분기 명령어보다 적은 수의 비트만 있으면 된다., 1
분기 범위가 오퍼랜드 필드의 길이에 의해 제한된다., 1
인덱스 레지스터의 내용과 변위를 더하여 유효주소를 결정한다., 1
배열 데이터 액세스 하는데 사용된다., 1
인덱스 레지스터의 내용과 변위를 더하여 유효주소를 결정한다., 1
자동 인덱싱 기능이 있다., 1
베이스 레지스터의 내용과 변위를 더하여 유효주소를 결정한다., 1
베이스 레지스터의 내용과 변위를 더하여 유효주소를 결정한다., 1
프로그램 처리 속도를 높이기 위해 동시에 처리하는 기술이다., 1
프로그램 처리 속도를 높이기 위해 동시에 처리하는 기술이다., 1
여러 단계로 분류되며 단계 수만큼 속도가 향상된다., 1
단계가 증가할 수록 속도가 향상된다., 1
지연이 발생할 수 있다., 1
지연이 발생할 수 있다., 1
속도 향상의 효과가 있다., 1
보편적인 명령어들을 동시에 시작시키고 독립적으로 실행시킨다., 1
보편적인 명령어들을 동시에 시작시키고 독립적으로 실행시킨다., 1
보편적인 명령어들을 동시에 시작시키고 독립적으로 실행시킨다., 1
설계가 복잡해질 수 있다., 1
설계가 복잡해질 수 있다., 1
명령어들 간의 데이터 의존 관계가 있다., 1
명령어들 간의 데이터 의존 관계가 있다., 1
명령어들 간의 의존관계와 하드웨어 이용 경합이다., 1
여러 개의 코어를 하나의 칩에 포함시킨 프로세서이다., 1
여러 개의 코어를 하나의 칩에 포함시킨 프로세서이다., 1
두 개이다., 1
네 개이다., 1
두 개의 중앙 처리 장치 코어가 있다., 1
네 개의 중앙 처리 장치 코어가 있다., 1
기억장치 및 레지스터에 대한 경합이 감소한다., 1
싱글 코어보다 기억장치 및 레지스터에 대한 경합이 감소한다., 1
데이터 버스의 크기는 CPU가 한 번에 전송가능한 데이터의 크기와 같아., 1
데이터 버스는 양뱡향의 버스야. 데이터가 중앙처리장치에서 기타장치로 나오고  들어갈 수 있어., 1
주소버스를 통해 주기억장치의 데이터를 읽고 쓰기 위한 주소 또는 입출력 장치가 결정돼. , 1
단방향의 버스야. CPU에서는 레지스터 이름 자체가 주소이기 때문에 필요하지 않아., 1
제어버스는 외부장치에서 CPU에 어떤 동작을 요구하는 각종 제어신호가 전송된다., 1
제어신호의 종류에는 read/write/interrupt/reset 신호가 있다. , 1
대역폭이란 데이터가 이동하는 버스를 통해 단위 시간당 전송하는 데이터의 크기다. 단위로는 MB/s와 GB/s가 있다., 1
대역폭은 해당 버스의 클록 주기와 데이터 버스의 폭으로 결정된다., 1
버스를 통해 단위시간 당 전송할 수 있는 데이터의 양이다. 버스대역폭=버스의 클럭 주파수 X 데이터 버스의 폭, 1
다수의 장치들이 하나의 시스템 버스에 동시에 사용을 요구하는 현상을 버스 경합이라하는데 이를 제어하는 것이 버스 중재기이다., 1
한 장치씩 차례대로 사용할 수 있게 중재하는 하드웨어 장치를 이른다., 1
어떤 장치가 시스템 버스를 사용하기 위해서는 버스 중재기에 버스 요청 신호를 보내고 버스 중재기가 버스 승인 신호를 장치에 보내 장치가 버스를 사용할 수 있게 한다. 버스 승인 받은 장치는 버스 사용 중지 신호를 보내고 버스를 사용한다., 1
버스 중재기는 장치와 버스 요청  버스 승인  버스 사용중지(Bus Busy)신호를 주고 받으며 버스 경합을 제어한다., 1
버스 중재 방식에는 병렬 중재 방식과 직렬 중재 방식  폴링 방식이있다., 1
병렬 중재 방식은 각 장치 마다 신호선을 연결하는 방법이다. 직렬 중재 방식은 모든 장치가 모든 신호선을 공유하는 데이지 체인 방식이다. 폴링방식은 버스 중재기가 각 장치에게 버스 사용 여부를 체크한다., 1
버스 중재 방식 중 하나이다. 주기적 검사 방식이라고도 한다., 1
버스 중재기가 각 장치에게 버스 사용 여부를 체크하는 방식이다. 하드웨어 폴링방식과 소프트웨어 폴링 방식이 있다., 1
하드웨어 폴링방식은 버스를 각 장치가 버스 중재기로 전송한 고유 번호를 통해 버스 사용을 요구한 장치를 찾는 데 사용한다. 소프트웨어 폴링 방식은 폴링의 순서를 중재기 내에서 CPU가 관리한다., 1
버스 중재를 위해 폴링 회선이 따로 중재기와 각 장치와 연결된 방식이다. 각 장치의 고유 번호대로 순차적으로 작동해 사용권을 받는데 시간이 길어진다., 1
하드웨어 폴링 방식과 구성이 동일하나 폴링의 순서를 CPU가 관리해 우선순위와 융통성이 높다. 소프트 웨어라 속도가 느린 단점이 있다., 1
입출력 포트를 통해 CPU 레지스터와 입출력 장치간 정보 전송을 제어한다., 1
레지스터와 입출력 장치간 정보 전송을 제어하는 시스템으로 DMA제어기  채널 제어기  입출력 프로세서 등이 있다., 1
입출력 장치는 고유의 장치 번호 혹은 주소로 구별을 한다., 1
기억 장치 사상 입출력 방식과 분리형 입출력 방식이 있다., 1
기억 장치 사상 입출력 방식은 입출력 장치를 접근할 때 입출력과 메모리의 주소 공간을 분리하지 않는 방식이고 분리형 입출력은 분리하는 방식이다., 1
기억 장치 사상 입출력 방식에서는 입출력 장치 메모리 접근 시에도 주기억 장치와 동일한 명령어를 사용한다. 분리형 입출력 장치는 별도의 접근 명령어를 사용한다., 1
사람과 컴퓨터가 서로 의사 교환을 하기 위한 것이야., 1
사람이 컴퓨터에게 지시할 명령어를 기술하기 위한 것이야., 1
프로그래밍언어는 사람과 컴퓨터 사이 의사소통을 위한 것으로 저급언어와 고급언어가 있다., 1
프로그래밍 언어는 저급언어인 기계어와 어셈블리어  고급언어인 자바  C등이 있다., 1
기계어는 0 1로 표현되어 컴퓨터가 이애할 수 있는 유일한 언어이다. 어셈블리어는 복잡한 기계어를 기호화한 것이다., 1
기계어와 어셈블리어로 구성되어 있다. 어셈블리어는 기계어의 연산코드와 피연산자를 프로그래머가 이해할 수 있게 기호형태로 대응시킨 언어이다., 1
기계어의 연산코드를 기호화한 것을 니모닉이라고 부르며 연산 코드의 종류는 LDA ADD STA등이 있다., 1
기계어와 어셈블리어가 있다. 어셈블리어로 하드웨어 장치에 대한 강력한 통제가 가능하다., 1
컴퓨터의 주기억장치  레지스터 등의 하드웨어를 직접 통제 가능하다., 1
고급언어에 비해 어려워 전문가여도 프로그램의 생산성이 낮다, 1
1950년대 중반 어셈블리어가 개발되어 프로그램 개발의 생산성이 높아졌다., 1
기계어 어셈블리어 고급언어에 이르기까지 프로그래밍 언어의 발달을 세대별로 구분한 것이다., 1
어셈블리어 이후에 나온 프로그래밍 언어야., 1
컴퓨터에서 특정 목적의 작업을 수행하기 위해 관련된 명령어와 자료를 모아 놓은 것이다., 1
프로그램 개발을 위해 에디터  컴파일러  링커  로더  디버거가 필요하다., 1
컴파일러는 고급 프로그래밍언어를 기계어로 변환해. 디버거는 프로그램 오류를 찾아줘. 링커는 목적파일을 실행 파일로 만들어 주는 개발 도구야., 1
프로그램을 구현하기 위해 가장 먼저 고급언어로 프로그램을 작성한다., 1
프로그램언어를 이용해 원하는 작업을 기술한 내용을 소스코드라고 한다., 1
컴파일 에러나 실행 에러를 수정하는 과정이다., 1
컴파일 방식과 다르게 프로그램을 구현하는 방식이다., 1
원시 코드 전체를 읽은 다음 이를 기계어로 번역한다., 1
실행되는 줄 단위 번역, 1
프로그램 전체를 번역하고 한번 컴파일한 후에는 매번 빠른 시간 내에 전체 실행이 가능하다., 1
자바와 C#언어는 컴파일러와 인터프리터의 특징을 모두 갖는다., 1
포트란은 최초의 대중화된 고급 프로그래밍 언어이다., 1
미국 국방부를 중심으로 결성된 그룹 CODASYL에 의해 처음 개발되었다., 1
포트란에 이어 두번째로 개발된 고급언어이다., 1
초보자도 쉽게 배울 수 있도록 만들어진 대화형 프로그래밍언어이다., 1
교육용으로 제작된 프로그래밍언어이나 범용적 개발용으로 성공했다., 1
파스칼을 기반으로 하는 그래픽 사용자 인터페이스이다, 1
운영체제 유닉스를 개발하기 위한 시스템 프로그래밍 언어이다., 1
C언어의 객체지향 버전이다. , 1
교육용 프로그래밍 언어이다., 1
프로그램 언어의 문법에 관련없이 프로그램 내부에 기술되는 부분이다., 1
문장과 여러 기호의 블록이 모여 프로그램을 구성한다., 1
프로그래밍 언어에 이미 정의된 단어이다., 1
프로그래머가 직접 이름을 정의하여 사용하는 단어이다., 1
프로그램에서 임시로 자료 값을 저장할 수 있는 저장 장소를 의미한다., 1
선언된 변수에 저장 값을 수정하려면 대입연산자를 이용한다., 1
변경이 불가능한 수로 변수와 대비되는 개념이야., 1
변수의 값의 범위나 연산의 방법을 규정해., 1
컴퓨터에게 컴퓨터가 할 일과 방법을 알려주는 것을 말해, 1
컴퓨터가 할일을 정확하게 알려주기 위해 생각하는 것을 말한다., 1
컴퓨팅적사고는 요리를 하기 위해 레시피를 만드는 것  코딩은 레시피 단계별로 상세히 지시하는 것, 1
 전 세계 누구나 편집할 수 있는  다중 언어 웹 기반 자유 콘텐츠 백과사전 프로젝트입니다. , 1
 연구자가 집필한 논문을 게재하는 잡지이다, 1
컴퓨터 분야 최고의 학술 단체, 1
구조화  추상화  형식화  문제해결방식을 식별 자동화 알고리즘고안 일반화의 특징을 갖는 문제해결 방식을 말한다., 1
지닛윙이 만든 컴퓨팅적사고 연구센터야, 1
컴퓨팅적 사고는 문제를 형식화하고 정보처리기기에 의하여 효과적으로 수행될 수 있는 솔루션을 찾는 것과 관계된 사고과정이다. 란 말을 한 컴퓨터 과학자, 1
문제를 기호와 수식같은 표현법으로 본질을 해석하고 표현하는 것이다., 1
컴퓨팅적 사고에서 솔루션, 1
소프트웨어 개발에 적절한 사고방식, 1
문제 상황의 핵심원리를 찾아내 이를 재구성하고 순서도를 만들어 해결하는 방식이다., 1
데이터를 모으고 조작하기  큰문제를 작은 문제들로 쪼개기  문제를 구조화하고 추상화하기  순서에따라 문제 해결을 자동화하기 등이 포함된다., 1
디지털 시대에 필요한 사고력과 문제해결능력 창의력을 기를 수 있다., 1
복잡한 문제를 작고 다루기 용이한 부분으로 쪼개는 것이야., 1
분할된 문제들 속에서 혹은 기존의 문제와의 유사성을 찾는 것이야., 1
중요한 정보에 포커스하고 관계가 적은 디테일은 무시하는 것이야., 1
문제를 해결하기 위하여 순차적으로 수행해 나가야할 단계나 규칙을 고안한 것이야., 1
고안된 알고리즘이 주어진 문제를 제대로 해결하는 것인지를 판단하는 것이야., 1
문제를 분할하지 않고 여러 단계를 하나로 생각하면 어렵기 때문에 쉽고 상세히 풀 수 있는 문제들로 분할하는 것을 의미한다., 1
분할된 문제들 간의 유사성을 발견한 경우 복잡한 문제를 보다 효과적으로 공략할 수 있다., 1
패턴식별을 위해 패턴과 개체를 분류한다. 모든 개체들에게 공통적으로 있는 속성은 패턴을 의미한다., 1
연구자는 자신의 연구 결과를 논문으로 세상에 알리며 학술지는 그러한 논문을 발표하는 자리이다. 학술지에 투고되는 논문이 많기 때문에 그 모두를 게재하는 것은 불가능하며  논문의 수준도 다양하기 때문에 취사선택되어 게재된다., 1
패턴 식별 과정에서 중요한 패턴에 집중하고 그 밖의 데이터는 무시하는 것, 1
컴퓨터가 풀게할 문제의 본질을 찾아내는 사고과정, 1
데이터를 표현하는 모델을 얻는 것. 이 모델을 바탕으로 컴퓨터에게 알고리즘을 코딩할 수 있다., 1
문제를 해결하기 위하여 순차적으로 수행해 나가야할 명령의 집합을 의미한다., 1
수행되어야할 명령의 집합을 표준화된 기호를 사용하여 순차적으로 표현한 다이어그램을 의미한다., 1
실제 프로그램에 가깝지만 사람에게 친숙한 표현을 따르는 코드, 1
알고리즘이 얼마나 효율적인지에 의해 결정된다., 1
고안된 솔루션(알고리즘)이 주어진 문제를 제대로 해결하는 것인지를 판단하는 과정을 말한다., 1
다양한 측면을 고려해 평가한다. 맞는 답? 성능은 충분한가? 자원을 경제적으로 사용하는가? 편리한가? 자꾸 사용해 보고 싶은가를 평가한다., 1
평가를 통해 제대로 된 알고리즘을 만들 수 있다., 1
농경-산업-지식정보-창의융합 사회로 이어진다., 1
생산 과정에서 새롭게 부가된 높은 가치를 말한다., 1
조선 항공 자동차  교통 산업을 말한다., 1
3D프린팅  가상 피팅이 있다., 1
메모리에 저장된 명령어를 CPU가 순차적으로 수행시키는 작업을 무한 반복한다., 1
순차적으로 수행될 명령어의 집합이 프로그램이며 곧 소프트웨어이다., 1
프로그래머블한 범용기기로 sw는 프로그래머의 의도에 따라 다양하게 프로그래밍된다. , 1
컴퓨터가 작업할 문제를 체계화하고 정확히 표현해 내기 위한 사고 과정을 의미한다., 1
Software is eating the world란 말을 한 과학자, 1
사람이 운전하지 않는 차로 3D지도  GPS LIDARrlqksdmfh 운정한다., 1
내부부품의 작동  주위 안전 상황을 실시간 모니터하는 차이다., 1
드론배달 사진촬영  합동연주  무거운짐들기  웨이터  광고  군용 등 다양하다., 1
IBM의 인공지능 컴퓨터로 미국 제퍼디 퀴즈쇼에서 인간을 상대로 이겼다., 1
식자개와 레시피 요리지식을 주입해 새로운 레시티를 만들었다. 왓슨을 두뇌로 장착한 로봇이 커피 판매 직원으로 활약 중이다., 1
online 2 offline의 약자로 배달앱 맛집추천 택시앱 등은 sw를 활용한 o2o형태의 신사업이다., 1
지난 10년간 하드웨어  제조업 중심의 업체 순위가 하락하고 sw 중심의 업체가 상위권으로 이동했다. 새로 진입한 기업 중 많은 기업이 sw기업이다., 1
인간 능력의 확대를 위해 컴퓨터를 효과적으로 활용하는 방법을 찾아내는 생각의 도구를 의미한다., 1
컴퓨팅적 사고는 컴퓨터가 수행할 문제를 체계화하고 해결방법을 표현하는 생각의 도구를 의미한다., 1
정보통신 기술  항공 우주  제약 등 경제협력기구가 정한 지식기반 제조업   지식기반 서비스업을 뜻한다., 1
함수의 호출과 관계되는 지역변수와 매개변수가 저장되는 영역이다.  , 1
힙영역은 런타임에 크기가 결정되는 메모리 공간이다., 1